{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 3,
  "links": [],
  "panels": [
    {
      "datasource": "Postgres",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "dropped"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 15
              },
              {
                "id": "custom.gradientMode",
                "value": "opacity"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "matched"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 15
              },
              {
                "id": "custom.gradientMode",
                "value": "opacity"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": ["mean", "p95", "max"],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "ceyre5ah0zj7kf"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH flowspecs_matched_bytes AS (\r\n    SELECT\r\n        timestamp,\r\n        matched_bytes,\r\n        router,\r\n        filter,\r\n        LAG(matched_bytes) OVER by_router AS prev_matched_bytes,\r\n        LAG(timestamp) OVER by_router AS prev_timestamp\r\n    FROM flowspecs\r\n    WHERE $__timeFilter(timestamp) AND router LIKE '%${router}%' AND filter LIKE '%${filter}%'\r\n    WINDOW by_router AS (PARTITION BY router, filter ORDER BY timestamp)\r\n),\r\nflowspecs_matched_bps AS (\r\n  SELECT\r\n      timestamp,\r\n      ((CASE WHEN prev_matched_bytes > matched_bytes THEN 0 ELSE matched_bytes - prev_matched_bytes END) * 8 / GREATEST(extract('epoch' FROM (timestamp - prev_timestamp))::int, 1)) AS bps\r\n  FROM flowspecs_matched_bytes\r\n)\r\nSELECT\r\n    time_bucket('1 minute', timestamp) AS time_1m,\r\n    sum(bps) AS matched\r\nFROM flowspecs_matched_bps\r\nGROUP BY time_1m\r\nORDER BY time_1m ASC",
          "refId": "matched",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "ceyre5ah0zj7kf"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH flowspecs_dropped_bytes AS (\r\n    SELECT\r\n        timestamp,\r\n        dropped_bytes,\r\n        router,\r\n        filter,\r\n        LAG(dropped_bytes) OVER by_router AS prev_dropped_bytes,\r\n        LAG(timestamp) OVER by_router AS prev_timestamp\r\n    FROM flowspecs\r\n    WHERE $__timeFilter(timestamp) AND router LIKE '%${router}%' AND filter LIKE '%${filter}%'\r\n    WINDOW by_router AS (PARTITION BY router, filter ORDER BY timestamp)\r\n),\r\nflowspecs_dropped_bps AS (\r\n  SELECT\r\n      timestamp,\r\n      ((CASE WHEN prev_dropped_bytes > dropped_bytes THEN 0 ELSE dropped_bytes - prev_dropped_bytes END) * 8 / GREATEST(extract('epoch' FROM (timestamp - prev_timestamp))::int, 1)) AS bps\r\n  FROM flowspecs_dropped_bytes\r\n)\r\nSELECT\r\n    time_bucket('1 minute', timestamp) AS time_1m,\r\n    sum(bps) AS dropped\r\nFROM flowspecs_dropped_bps\r\nGROUP BY time_1m\r\nORDER BY time_1m ASC",
          "refId": "dropped",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Bytes",
      "type": "timeseries"
    },
    {
      "datasource": "Postgres",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "pps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "dropped"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 15
              },
              {
                "id": "custom.gradientMode",
                "value": "opacity"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "matched"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 15
              },
              {
                "id": "custom.gradientMode",
                "value": "opacity"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": ["mean", "p95", "max"],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "ceyre5ah0zj7kf"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH flowspecs_matched_packets AS (\r\n    SELECT\r\n        timestamp,\r\n        matched_packets,\r\n        router,\r\n        filter,\r\n        LAG(matched_packets) OVER by_router AS prev_matched_packets,\r\n        LAG(timestamp) OVER by_router AS prev_timestamp\r\n    FROM flowspecs\r\n    WHERE $__timeFilter(timestamp) AND router LIKE '%${router}%' AND filter LIKE '%${filter}%'\r\n    WINDOW by_router AS (PARTITION BY router, filter ORDER BY timestamp)\r\n),\r\nflowspecs_matched_pps AS (\r\n  SELECT\r\n      timestamp,\r\n      ((CASE WHEN prev_matched_packets > matched_packets THEN 0 ELSE matched_packets - prev_matched_packets END) / GREATEST(extract('epoch' FROM (timestamp - prev_timestamp))::int, 1)) AS pps\r\n  FROM flowspecs_matched_packets\r\n)\r\nSELECT\r\n    time_bucket('1 minute', timestamp) AS time_1m,\r\n    sum(pps) AS matched\r\nFROM flowspecs_matched_pps\r\nGROUP BY time_1m\r\nORDER BY time_1m ASC",
          "refId": "matched",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "ceyre5ah0zj7kf"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH flowspecs_dropped_packets AS (\r\n    SELECT\r\n        timestamp,\r\n        dropped_packets,\r\n        router,\r\n        filter,\r\n        LAG(dropped_packets) OVER by_router AS prev_dropped_packets,\r\n        LAG(timestamp) OVER by_router AS prev_timestamp\r\n    FROM flowspecs\r\n    WHERE $__timeFilter(timestamp) AND router LIKE '%${router}%' AND filter LIKE '%${filter}%'\r\n    WINDOW by_router AS (PARTITION BY router, filter ORDER BY timestamp)\r\n),\r\nflowspecs_dropped_pps AS (\r\n  SELECT\r\n      timestamp,\r\n      ((CASE WHEN prev_dropped_packets > dropped_packets THEN 0 ELSE dropped_packets - prev_dropped_packets END) / GREATEST(extract('epoch' FROM (timestamp - prev_timestamp))::int, 1)) AS pps\r\n  FROM flowspecs_dropped_packets\r\n)\r\nSELECT\r\n    time_bucket('1 minute', timestamp) AS time_1m,\r\n    sum(pps) AS dropped\r\nFROM flowspecs_dropped_pps\r\nGROUP BY time_1m\r\nORDER BY time_1m ASC",
          "refId": "dropped",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Packets",
      "type": "timeseries"
    },
    {
      "datasource": "Postgres",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto",
              "wrapText": true
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "pps"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "matched_packets"
            },
            "properties": [
              {
                "id": "unit",
                "value": "sishort"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "dropped_packets"
            },
            "properties": [
              {
                "id": "unit",
                "value": "sishort"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "matched_bytes"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decbytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "dropped_bytes"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decbytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "filter"
            },
            "properties": [
              {
                "id": "custom.minWidth",
                "value": 500
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 10
      },
      "id": 3,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": ["sum"],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "dropped_packets"
          }
        ]
      },
      "pluginVersion": "12.1.1",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "ceyre5ah0zj7kf"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH flowspecs_bytes_and_packets AS (\r\n    SELECT\r\n        timestamp,\r\n        matched_packets,\r\n        dropped_packets,\r\n        matched_bytes,\r\n        dropped_bytes,\r\n        router,\r\n        filter,\r\n        LAG(matched_packets) OVER by_router AS prev_matched_packets,\r\n        LAG(dropped_packets) OVER by_router AS prev_dropped_packets,\r\n        LAG(matched_bytes) OVER by_router AS prev_matched_bytes,\r\n        LAG(dropped_bytes) OVER by_router AS prev_dropped_bytes\r\n    FROM flowspecs\r\n    WHERE $__timeFilter(timestamp) AND router LIKE '%${router}%' AND filter LIKE '%${filter}%'\r\n    WINDOW by_router AS (PARTITION BY router, filter ORDER BY timestamp)\r\n),\r\nflowspecs_diff_bytes_and_packets AS (\r\n  SELECT\r\n      timestamp,\r\n      filter,\r\n      (CASE WHEN prev_matched_packets > matched_packets THEN 0 ELSE matched_packets - prev_matched_packets END) AS diff_matched_packets,\r\n      (CASE WHEN prev_dropped_packets > dropped_packets THEN 0 ELSE dropped_packets - prev_dropped_packets END) AS diff_dropped_packets,\r\n      (CASE WHEN prev_matched_bytes > matched_bytes THEN 0 ELSE matched_bytes - prev_matched_bytes END) AS diff_matched_bytes,\r\n      (CASE WHEN prev_dropped_bytes > dropped_bytes THEN 0 ELSE dropped_bytes - prev_dropped_bytes END) AS diff_dropped_bytes\r\n  FROM flowspecs_bytes_and_packets\r\n)\r\nSELECT\r\n    min(timestamp) AS time_min,\r\n    max(timestamp) AS time_max,\r\n    filter,\r\n    sum(diff_matched_packets) AS matched_packets,\r\n    sum(diff_dropped_packets) AS dropped_packets,\r\n    sum(diff_matched_bytes) AS matched_bytes,\r\n    sum(diff_dropped_bytes) AS dropped_bytes\r\nFROM flowspecs_diff_bytes_and_packets\r\nGROUP BY filter\r\nORDER BY time_max DESC",
          "refId": "flowspecs",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Filters",
      "type": "table"
    }
  ],
  "preload": false,
  "schemaVersion": 41,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "text": "",
          "value": ""
        },
        "description": "Search by router",
        "label": "Router",
        "name": "router",
        "options": [
          {
            "selected": true,
            "text": "",
            "value": ""
          }
        ],
        "query": "",
        "type": "textbox"
      },
      {
        "current": {
          "text": "",
          "value": ""
        },
        "description": "Search in the filter",
        "label": "Filter",
        "name": "filter",
        "options": [
          {
            "selected": true,
            "text": "",
            "value": ""
          }
        ],
        "query": "",
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now-12h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "FlowSpec",
  "uid": "ec3aefd1-9d13-4641-b2ca-067cdc459b8f",
  "version": 1
}
